// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dict.protoc

package common_server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 请求数据格式
type GetNameByCodeRequest struct {
	Code                 int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	CodeType             string   `protobuf:"bytes,2,opt,name=codeType,proto3" json:"codeType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNameByCodeRequest) Reset()         { *m = GetNameByCodeRequest{} }
func (m *GetNameByCodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetNameByCodeRequest) ProtoMessage()    {}
func (*GetNameByCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e99dc8dfd1ceb138, []int{0}
}

func (m *GetNameByCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNameByCodeRequest.Unmarshal(m, b)
}
func (m *GetNameByCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNameByCodeRequest.Marshal(b, m, deterministic)
}
func (m *GetNameByCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNameByCodeRequest.Merge(m, src)
}
func (m *GetNameByCodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetNameByCodeRequest.Size(m)
}
func (m *GetNameByCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNameByCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNameByCodeRequest proto.InternalMessageInfo

func (m *GetNameByCodeRequest) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetNameByCodeRequest) GetCodeType() string {
	if m != nil {
		return m.CodeType
	}
	return ""
}

// 响应出数据格式
type GetNameByCodeResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNameByCodeResponse) Reset()         { *m = GetNameByCodeResponse{} }
func (m *GetNameByCodeResponse) String() string { return proto.CompactTextString(m) }
func (*GetNameByCodeResponse) ProtoMessage()    {}
func (*GetNameByCodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e99dc8dfd1ceb138, []int{1}
}

func (m *GetNameByCodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNameByCodeResponse.Unmarshal(m, b)
}
func (m *GetNameByCodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNameByCodeResponse.Marshal(b, m, deterministic)
}
func (m *GetNameByCodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNameByCodeResponse.Merge(m, src)
}
func (m *GetNameByCodeResponse) XXX_Size() int {
	return xxx_messageInfo_GetNameByCodeResponse.Size(m)
}
func (m *GetNameByCodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNameByCodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNameByCodeResponse proto.InternalMessageInfo

func (m *GetNameByCodeResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*GetNameByCodeRequest)(nil), "common_server.GetNameByCodeRequest")
	proto.RegisterType((*GetNameByCodeResponse)(nil), "common_server.GetNameByCodeResponse")
}

func init() { proto.RegisterFile("dict.protoc", fileDescriptor_e99dc8dfd1ceb138) }

var fileDescriptor_e99dc8dfd1ceb138 = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0xc9, 0x4c, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x16, 0xe2, 0x4d, 0xce, 0xcf, 0xcd, 0xcd, 0xcf, 0x8b,
	0x2f, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0x52, 0x72, 0xe3, 0x12, 0x71, 0x4f, 0x2d, 0xf1, 0x4b, 0xcc,
	0x4d, 0x75, 0xaa, 0x74, 0xce, 0x4f, 0x49, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12,
	0xe2, 0x62, 0x49, 0xce, 0x4f, 0x49, 0x95, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e, 0x02, 0xb3, 0x85,
	0xa4, 0xb8, 0x38, 0x40, 0x74, 0x48, 0x65, 0x41, 0xaa, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x67, 0x10,
	0x9c, 0xaf, 0xa4, 0xcd, 0x25, 0x8a, 0x66, 0x4e, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0x2a, 0xc8, 0xa0,
	0xbc, 0xc4, 0x5c, 0x88, 0x41, 0x9c, 0x41, 0x60, 0xb6, 0x51, 0x3a, 0x17, 0xbb, 0x7b, 0x51, 0x6a,
	0x6a, 0x49, 0x6a, 0x91, 0x50, 0x0c, 0x17, 0x2f, 0x8a, 0x3e, 0x21, 0x65, 0x3d, 0x14, 0x07, 0xea,
	0x61, 0x73, 0x9d, 0x94, 0x0a, 0x7e, 0x45, 0x10, 0xab, 0x95, 0x18, 0x92, 0xd8, 0xc0, 0x9e, 0x36,
	0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x47, 0x9f, 0x98, 0x71, 0x02, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	GetNameByCode(ctx context.Context, in *GetNameByCodeRequest, opts ...grpc.CallOption) (*GetNameByCodeResponse, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) GetNameByCode(ctx context.Context, in *GetNameByCodeRequest, opts ...grpc.CallOption) (*GetNameByCodeResponse, error) {
	out := new(GetNameByCodeResponse)
	err := c.cc.Invoke(ctx, "/common_server.Greeter/GetNameByCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	GetNameByCode(context.Context, *GetNameByCodeRequest) (*GetNameByCodeResponse, error)
}

// UnimplementedGreeterServer can be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (*UnimplementedGreeterServer) GetNameByCode(ctx context.Context, req *GetNameByCodeRequest) (*GetNameByCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNameByCode not implemented")
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_GetNameByCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNameByCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetNameByCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common_server.Greeter/GetNameByCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetNameByCode(ctx, req.(*GetNameByCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "common_server.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNameByCode",
			Handler:    _Greeter_GetNameByCode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dict.protoc",
}
