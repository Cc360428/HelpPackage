// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package swagger

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Cc360428",
            "email": "li_chao_cheng@163.com"
        },
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "用户注册与登录"
                ],
                "summary": "用户登录",
                "parameters": [
                    {
                        "description": "请求参数",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 0, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "{\"code\": -1, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "tags": [
                    "Public"
                ],
                "summary": "ping(测试是否ok)",
                "responses": {
                    "200": {
                        "description": "{\"code\": 0, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "{\"code\": -1, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/reg": {
            "post": {
                "tags": [
                    "用户注册与登录"
                ],
                "summary": "注册",
                "parameters": [
                    {
                        "description": "请求参数",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RegRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 0, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "{\"code\": -1, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/reg/check_email_code": {
            "post": {
                "tags": [
                    "用户注册与登录"
                ],
                "summary": "校验邮箱验证码是否正确",
                "parameters": [
                    {
                        "description": "请求参数",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CheckEmailCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 0, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "{\"code\": -1, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/reg/check_name": {
            "post": {
                "tags": [
                    "用户注册与登录"
                ],
                "summary": "校验名字是否存在",
                "parameters": [
                    {
                        "description": "请求参数",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CheckNameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 0, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "{\"code\": -1, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/reg/send_email_code": {
            "post": {
                "tags": [
                    "用户注册与登录"
                ],
                "summary": "注册时发送验证码",
                "parameters": [
                    {
                        "description": "请求参数",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.SendVerificationCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 0, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "{\"code\": -1, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/retrieve_password": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "tags": [
                    "用户注册与登录"
                ],
                "summary": "找回密码",
                "parameters": [
                    {
                        "description": "请求参数",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RetrievePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 0, \"data\": \"\",  \"message\": \"Request successful\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/send_email_code": {
            "post": {
                "tags": [
                    "用户注册与登录"
                ],
                "summary": "找回密码发送验证码",
                "parameters": [
                    {
                        "description": "请求参数",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.SendVerificationCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 0, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "{\"code\": -1, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/tool/upload": {
            "post": {
                "description": "上传文件",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Tools"
                ],
                "summary": "上传文件",
                "parameters": [
                    {
                        "type": "file",
                        "description": "选择文件",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 0, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "{\"code\": -1, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "tags": [
                    "User interface"
                ],
                "summary": "获取用户信息",
                "responses": {
                    "200": {
                        "description": "{\"code\": 0, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/user.GetUserInfoRequest"
                        }
                    },
                    "400": {
                        "description": "{\"code\": -1, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "tags": [
                    "用户注册与登录"
                ],
                "summary": "用户登出",
                "responses": {
                    "200": {
                        "description": "{\"code\": 0, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/update": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "tags": [
                    "User interface"
                ],
                "summary": "修改用户信息",
                "parameters": [
                    {
                        "description": "请求参数",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 0, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "{\"code\": -1, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/update_password": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "tags": [
                    "User interface"
                ],
                "summary": "修改密码",
                "parameters": [
                    {
                        "description": "修改密码之后需要重新登录",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdatePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": -6, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "{\"code\": -1, \"data\": \"\",  \"message\": \"\" }",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.CheckEmailCodeRequest": {
            "type": "object",
            "required": [
                "code",
                "email"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "controllers.CheckNameRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "controllers.LoginRequest": {
            "type": "object",
            "required": [
                "name_and_email",
                "password"
            ],
            "properties": {
                "name_and_email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "controllers.RegRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "controllers.RetrievePasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "email_code": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "controllers.SendVerificationCodeRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "user.GetUserInfoRequest": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "email": {
                    "description": "邮箱",
                    "type": "string"
                },
                "images_url": {
                    "description": "头像",
                    "type": "string"
                },
                "last_logon_time": {
                    "description": "最后登入时间",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "sex": {
                    "description": "性别",
                    "type": "integer"
                }
            }
        },
        "user.UpdatePasswordRequest": {
            "type": "object",
            "required": [
                "new_password",
                "password"
            ],
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.UpdateRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "邮箱",
                    "type": "string"
                },
                "images_url": {
                    "description": "头像",
                    "type": "string"
                },
                "name": {
                    "description": "名字",
                    "type": "string"
                },
                "sex": {
                    "description": "性别",
                    "type": "integer"
                }
            }
        },
        "utils.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "object"
                }
            }
        }
    },
    "securityDefinitions": {
        "Authorization": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.0.1",
	Host:        "",
	BasePath:    "/",
	Schemes:     []string{"http", "https"},
	Title:       "cc_app",
	Description: "gin",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
